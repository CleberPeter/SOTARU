- Todas as mensagens transmitidas só podem ser inicializadas pelo líder ou por um candidato que está tentando se tornar líder;
- Apenas um candidato com um log que contém todos os comandos confirmados pode se tornar líder;
- O sistema só está disponível quando um líder foi eleito e está vivo. Caso contrário, um novo líder será eleito e o sistema permanecerá indisponível durante a votação;
- O líder cuida de toda a comunicação com os clientes do aplicativo e precisa ser contatado diretamente por eles;

 Cada servidor tem sua própria visão local de hora, que é representada por seu currentTerm. Este número currentTerm aumenta monotonicamente com o tempo, o que significa que ele só pode aumentar.

Cada comunicação em Raft inclui uma troca e comparação de termos atuais. Um termo é atualizado apenas quando um servidor (re) inicia uma eleição ou quando o currentTerm do partido com o qual um servidor se comunica é maior do que o seu, caso em que o termo é atualizado com aquele valor mais alto. Qualquer tentativa de comunicação com um servidor de um mandato superior é sempre rejeitada e quando um candidato ou líder descobre um mandato superior ao seu, imediatamente volta a ser um seguidor.

Seguidor:

Os seguidores respondem apenas aos RPCs, mas não iniciam nenhuma comunicação;

Candidato:

Os candidatos iniciam nova eleição, incrementando o prazo, solicitando voto e votando por si próprios. Dependendo do resultado da eleição, torne-se líder, seguidor (seja vencido ou receba RPC de um líder válido) ou reinicie essas etapas (em um novo mandato). Apenas um candidato com um log que contém todos os comandos confirmados pode se tornar líder

Líder:

O líder envia batimentos cardíacos (RPCs AppendEntries vazios) para todos os seguidores, evitando assim tempos limite em períodos ociosos. Para cada comando do cliente, anexe ao registro local e comece a replicar essa entrada de registro, em caso de replicação em pelo menos a maioria dos servidores, confirme, aplique a entrada confirmada em sua própria máquina de estado líder e, em seguida, retorne o resultado para o cliente.

Se logIndex for maior que o nextIndex de um seguidor, anexe todas as entradas de log no seguidor usando RPC, começando com seu nextIndex.

Todos esses cargos têm um tempo limite aleatório, ao decorrer do qual todos os cargos assumem que o líder caiu e se convertem em candidatos, desencadeando uma nova eleição e incrementando o mandato atual.


Cada nodo vota em somente um candidato para um determinado term, o voto é dado ao primeiro candidato que o solicitou desde que seu lastindex esteja em conformidade com o do próprio nodo. 
